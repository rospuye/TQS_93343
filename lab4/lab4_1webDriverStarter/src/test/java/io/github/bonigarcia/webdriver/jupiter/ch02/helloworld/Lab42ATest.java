// Generated by Selenium IDE
package io.github.bonigarcia.webdriver.jupiter.ch02.helloworld;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.AfterEach;

import static org.assertj.core.api.Assertions.assertThat;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.util.concurrent.TimeUnit;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import io.github.bonigarcia.seljup.SeleniumJupiter;

@ExtendWith(SeleniumJupiter.class)
public class Lab42ATest {
  private WebDriver driver;
  WebDriverWait wait;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  // @BeforeEach
  // public void setUp() {
  //   driver = new FirefoxDriver();
  //   wait = new WebDriverWait(driver, Duration.ofSeconds(2));
  //   //driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
  //   js = (JavascriptExecutor) driver;
  //   vars = new HashMap<String, Object>();
  //   // wait = new WebDriverWait(driver, 100);
  // }
  // @AfterEach
  // public void tearDown() {
  //   driver.quit();
  // }
  @Test
  public void lab42A(FirefoxDriver driver) {
    vars = new HashMap<String, Object>();
    driver.get("https://blazedemo.com/");
    driver.manage().window().setSize(new Dimension(910, 752));
    driver.findElement(By.name("fromPort")).click();
    {
      WebElement dropdown = driver.findElement(By.name("fromPort"));
      dropdown.findElement(By.xpath("//option[. = 'Boston']")).click();
    }
    driver.findElement(By.cssSelector(".form-inline:nth-child(1) > option:nth-child(3)")).click();
    driver.findElement(By.name("toPort")).click();
    {
      WebElement dropdown = driver.findElement(By.name("toPort"));
      dropdown.findElement(By.xpath("//option[. = 'New York']")).click();
    }
    driver.findElement(By.cssSelector(".form-inline:nth-child(4) > option:nth-child(5)")).click();
    vars.put("city1", driver.findElement(By.name("fromPort")).getAttribute("value"));
    vars.put("city2", driver.findElement(By.name("toPort")).getAttribute("value"));
    driver.findElement(By.cssSelector(".btn-primary")).click();

    WebElement element = driver.findElement(By.cssSelector("thead > tr"));               
    Actions act = new Actions(driver);
    act.moveToElement(element).click().perform();

    driver.findElement(By.cssSelector("th:nth-child(4)")).click();
    driver.findElement(By.cssSelector("th:nth-child(4)")).click();
    assertThat(driver.findElement(By.cssSelector("th:nth-child(4)")).getText()).isEqualTo("Departs: " + vars.get("city1").toString());
    driver.findElement(By.cssSelector("th:nth-child(5)")).click();
    assertThat(driver.findElement(By.cssSelector("th:nth-child(5)")).getText()).isEqualTo("Arrives: " + vars.get("city2").toString());
    driver.findElement(By.cssSelector("tr:nth-child(2) > td:nth-child(4)")).click();
    vars.put("airline", driver.findElement(By.cssSelector("tr:nth-child(2) > td:nth-child(4)")).getText());
    driver.findElement(By.cssSelector("tr:nth-child(2) > td:nth-child(7)")).click();
    vars.put("price", driver.findElement(By.cssSelector("tr:nth-child(2) > td:nth-child(7)")).getText());
    System.out.println(vars.get("price").toString());
    driver.findElement(By.cssSelector("tr:nth-child(2) .btn")).click();
    driver.findElement(By.cssSelector("p:nth-child(4)")).click();


    /* The commented assertions below will fail. They're commented so that the test runs all the way through.
    Uncomment it if you want to see the fails that were done purposefully. */

    // assertThat(driver.findElement(By.cssSelector("p:nth-child(4)")).getText()).isEqualTo(vars.get("price").toString());
    // assertThat(driver.findElement(By.cssSelector("p:nth-child(2)")).getText()).isEqualTo(vars.get("airline").toString());
    driver.findElement(By.id("inputName")).click();
    driver.findElement(By.id("inputName")).sendKeys("Isabel Rosário");
    driver.findElement(By.id("address")).click();
    driver.findElement(By.id("address")).sendKeys("123 Main Str");
    driver.findElement(By.id("city")).click();
    driver.findElement(By.id("city")).sendKeys("Anycity");
    driver.findElement(By.id("state")).click();
    driver.findElement(By.id("state")).sendKeys("Anystate");
    driver.findElement(By.id("zipCode")).click();
    driver.findElement(By.id("zipCode")).sendKeys("12345");
    driver.findElement(By.id("creditCardNumber")).click();
    driver.findElement(By.id("creditCardNumber")).sendKeys("2222");
    driver.findElement(By.id("creditCardYear")).click();
    driver.findElement(By.id("creditCardYear")).sendKeys("2022");
    driver.findElement(By.id("nameOnCard")).click();
    driver.findElement(By.id("nameOnCard")).sendKeys("Isabel Rosário");
    driver.findElement(By.cssSelector("p:nth-child(7)")).click();
    vars.put("total_price", driver.findElement(By.cssSelector("em")).getText());
    driver.findElement(By.id("creditCardNumber")).click();
    // vars.put("credit_card_number", driver.findElement(By.id("creditCardNumber")).getAttribute("value"));
    driver.findElement(By.cssSelector(".btn-primary")).click();
    driver.findElement(By.cssSelector("tr:nth-child(4) > td:nth-child(2)")).click();
    // assertThat(driver.findElement(By.cssSelector("tr:nth-child(4) > td:nth-child(2)")).getText()).isEqualTo(vars.get("credit_card_number").toString());
    driver.findElement(By.cssSelector("tr:nth-child(3) > td:nth-child(2)")).click();
    // assertThat(driver.findElement(By.cssSelector("tr:nth-child(3) > td:nth-child(2)")).getText()).isEqualTo(vars.get("total_price").toString());
    assertThat(driver.getTitle()).isEqualTo("BlazeDemo Confirmation");
  }
}
